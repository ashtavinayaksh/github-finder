{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Project\\\\github-finder\\\\src\\\\components\\\\users\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport GithubContext from '../../context/github/githubContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Search = () => {\n  _s();\n\n  const githubContext = useContext(GithubContext);\n  const alertContext = useContext(AlertContext);\n  const [text, setText] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      alertContext.setAlert('Please enter something', 'light');\n    } else {\n      githubContext.searchUsers(text);\n      setText('');\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: text,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), githubContext.users.length > 0 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: githubContext.clearUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Clear\"));\n};\n\n_s(Search, \"ZkdNkoT487xF4jOFI3FJLldAeHE=\");\n\n_c = Search;\nexport default Search; // form needs and onChange handler or it is read only by default ie you can't type anything inside\n// we will always have component level state for forms even if we are using context or redux\n// [e.target.name] will let us set the state for any active target so we don't need to set 'name', 'email', etc ...\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["E:/React_Project/github-finder/src/components/users/Search.js"],"names":["React","useState","useContext","GithubContext","AlertContext","Search","githubContext","alertContext","text","setText","onSubmit","e","preventDefault","setAlert","searchUsers","onChange","target","value","users","length","clearUsers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,aAAa,GAAGJ,UAAU,CAACC,aAAD,CAAhC;AACA,QAAMI,YAAY,GAAGL,UAAU,CAACE,YAAD,CAA/B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMS,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIJ,IAAI,KAAK,EAAb,EAAiB;AACfD,MAAAA,YAAY,CAACM,QAAb,CAAsB,wBAAtB,EAAgD,OAAhD;AACD,KAFD,MAEO;AACLP,MAAAA,aAAa,CAACQ,WAAd,CAA0BN,IAA1B;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GARD;;AAUA,QAAMM,QAAQ,GAAGJ,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV,CAA7B;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEP,QAAhB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,KAAK,EAAEF,IAJT;AAKE,IAAA,QAAQ,EAAEO,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeGT,aAAa,CAACY,KAAd,CAAoBC,MAApB,GAA6B,CAA7B,iBACC;AACE,IAAA,SAAS,EAAC,yBADZ;AAEE,IAAA,OAAO,EAAEb,aAAa,CAACc,UAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADF;AAyBD,CA1CD;;GAAMf,M;;KAAAA,M;AA4CN,eAAeA,MAAf,C,CAEA;AACA;AACA","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport GithubContext from '../../context/github/githubContext'\r\nimport AlertContext from '../../context/alert/alertContext'\r\n\r\nconst Search = () => {\r\n  const githubContext = useContext(GithubContext)\r\n  const alertContext = useContext(AlertContext)\r\n  const [text, setText] = useState('')\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    if (text === '') {\r\n      alertContext.setAlert('Please enter something', 'light')\r\n    } else {\r\n      githubContext.searchUsers(text)\r\n      setText('')\r\n    }\r\n  }\r\n\r\n  const onChange = e => setText(e.target.value)\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className='form'>\r\n        <input\r\n          type='text'\r\n          name='text'\r\n          placeholder='Search Users...'\r\n          value={text}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='submit'\r\n          value='Search'\r\n          className='btn btn-dark btn-block'\r\n        />\r\n      </form>\r\n      {githubContext.users.length > 0 && (\r\n        <button\r\n          className='btn btn-light btn-block'\r\n          onClick={githubContext.clearUsers}>\r\n          Clear\r\n        </button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n\r\n// form needs and onChange handler or it is read only by default ie you can't type anything inside\r\n// we will always have component level state for forms even if we are using context or redux\r\n// [e.target.name] will let us set the state for any active target so we don't need to set 'name', 'email', etc ...\r\n"]},"metadata":{},"sourceType":"module"}