{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Project\\\\github-finder\\\\src\\\\context\\\\github\\\\GithubState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\n\nconst GithubState = props => {\n  _s();\n\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // Search Users\n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // Get User\n\n\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}?&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    console.log(res.data);\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  }; // Get Repos\n\n\n  const getUserRepos = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    console.log(res.data);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  }; // Clear Users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); // Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubState;\nexport default GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["E:/React_Project/github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","type","payload","data","items","getUser","username","console","log","getUserRepos","clearUsers","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react'\r\nimport axios from 'axios'\r\nimport GithubContext from './githubContext'\r\nimport GithubReducer from './githubReducer'\r\nimport {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_USER,\r\n  GET_REPOS\r\n} from '../types'\r\n\r\nconst GithubState = props => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    loading: false\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(GithubReducer, initialState)\r\n\r\n  // Search Users\r\n  const searchUsers = async text => {\r\n    setLoading(true)\r\n    const res = await axios.get(\r\n      `https://api.github.com/search/users?q=${text}&client_id=${\r\n        process.env.REACT_APP_GITHUB_CLIENT_ID\r\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    )\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: res.data.items\r\n    })\r\n  }\r\n\r\n  // Get User\r\n  const getUser = async username => {\r\n    setLoading()\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}?&client_id=${\r\n        process.env.REACT_APP_GITHUB_CLIENT_ID\r\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    )\r\n    console.log(res.data)\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data\r\n    })\r\n  }\r\n\r\n  // Get Repos\r\n  const getUserRepos = async username => {\r\n    setLoading()\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${\r\n        process.env.REACT_APP_GITHUB_CLIENT_ID\r\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    )\r\n    console.log(res.data)\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data\r\n    })\r\n  }\r\n\r\n  // Clear Users\r\n  const clearUsers = () => dispatch({ type: CLEAR_USERS })\r\n\r\n  // Set Loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING })\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        searchUsers,\r\n        clearUsers,\r\n        getUser,\r\n        getUserRepos\r\n      }}>\r\n      {props.children}\r\n    </GithubContext.Provider>\r\n  )\r\n}\r\n\r\nexport default GithubState\r\n"]},"metadata":{},"sourceType":"module"}